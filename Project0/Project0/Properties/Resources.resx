<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountMenu" xml:space="preserve">
    <value>Here are your accounts.</value>
  </data>
  <data name="AccountNameUnavailable" xml:space="preserve">
    <value>You already have an account with this name.</value>
  </data>
  <data name="AmountRegex" xml:space="preserve">
    <value>@"^\d{0,14}(.\d{2})?$"</value>
  </data>
  <data name="AreYouSureDeleteAccount" xml:space="preserve">
    <value>Are you sure you want to close this account?</value>
  </data>
  <data name="AreYouSureDeleteCustomer" xml:space="preserve">
    <value>Are you sure you want to close all your accounts with us?</value>
  </data>
  <data name="CannotCloseFundsOwed" xml:space="preserve">
    <value>You cannot close this account because funds are owed.</value>
  </data>
  <data name="CannotCloseOutFundsOwed" xml:space="preserve">
    <value>You cannot close all your accounts because funds are owed.</value>
  </data>
  <data name="CloseRemoveFunds" xml:space="preserve">
    <value>You still have ${0} in your account. What would you like to do?</value>
  </data>
  <data name="ConfirmClosePremature" xml:space="preserve">
    <value>Are you sure you want to close this account prematurely? Funds can be transferred out after closing.</value>
  </data>
  <data name="ConfirmCloseWithFunds" xml:space="preserve">
    <value>WARNING: You will lose access to funds!
Are you sure you want to delete your account?</value>
  </data>
  <data name="CreateCheckingNeeded" xml:space="preserve">
    <value>You will need another checking account to transfer.</value>
  </data>
  <data name="CreatePassword" xml:space="preserve">
    <value>Please enter a password: </value>
  </data>
  <data name="CreateUsername" xml:space="preserve">
    <value>Please enter a username for your new account.</value>
  </data>
  <data name="DeletingFinalAccount" xml:space="preserve">
    <value>This is your only account, so closing this account will remove you from our system.</value>
  </data>
  <data name="EnterDollarAmount" xml:space="preserve">
    <value>Enter an amount in dollars:</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Please enter your password.</value>
  </data>
  <data name="EnterUsername" xml:space="preserve">
    <value>Please enter your username to login.</value>
  </data>
  <data name="ErrorInvalidProgramFlow" xml:space="preserve">
    <value>Invalid program state!</value>
  </data>
  <data name="ExistingAccountOrRegister" xml:space="preserve">
    <value>Would you like to [login] to an existing account or [register] for a new account?</value>
  </data>
  <data name="GiveAccountName" xml:space="preserve">
    <value>Please give this account a name.</value>
  </data>
  <data name="Goodbye" xml:space="preserve">
    <value>Thank you for banking with Console First. Goodbye.</value>
  </data>
  <data name="IncompatibleAccount" xml:space="preserve">
    <value>This operation cannot be completed on this account.</value>
  </data>
  <data name="InvalidInputTryAgain" xml:space="preserve">
    <value>Invalid input. Try again.</value>
  </data>
  <data name="MainMenuOptions" xml:space="preserve">
    <value>You can [view] an account, open a [new] account, [transfer] between accounts, [close] all accounts or [logout].</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="OperationCancelled" xml:space="preserve">
    <value>Operation cancelled.</value>
  </data>
  <data name="OperationComplete" xml:space="preserve">
    <value>Operation complete.</value>
  </data>
  <data name="OperationFailed" xml:space="preserve">
    <value>Operation failed.</value>
  </data>
  <data name="PasswordIncorrect" xml:space="preserve">
    <value>The password you entered is incorrect.</value>
  </data>
  <data name="PasswordLength" xml:space="preserve">
    <value>A password must be at least {0} characters long.</value>
  </data>
  <data name="PleaseEnter" xml:space="preserve">
    <value>Please enter the number corresponding to your selection: </value>
  </data>
  <data name="PressAnyKey" xml:space="preserve">
    <value>Press any key to continue...</value>
  </data>
  <data name="SelectAccountTransferFrom" xml:space="preserve">
    <value>Please select an account to transfer from.</value>
  </data>
  <data name="SelectAccountTransferTo" xml:space="preserve">
    <value>Please select an account to transfer into.</value>
  </data>
  <data name="SelectAccountView" xml:space="preserve">
    <value>Please select an account to view.</value>
  </data>
  <data name="ServiceUnavailable" xml:space="preserve">
    <value>An unexpected error occurred. This service is temporarily unavailable.</value>
  </data>
  <data name="TermDepositWithdraw" xml:space="preserve">
    <value>Funds in a term deposit account cannot be withdrawn before maturity except under specific conditions specified in your account agreement. Please speak to a store associate for details.</value>
  </data>
  <data name="TransferAmount" xml:space="preserve">
    <value>How much would you like to transfer from {0} to {1}?</value>
  </data>
  <data name="TransferNotMoreThanOwedConfirm" xml:space="preserve">
    <value>The amount transferred will not be more than the amount owed. IS that okay?</value>
  </data>
  <data name="TransferRequiresTwoAccounts" xml:space="preserve">
    <value>A transfer requires two accounts.</value>
  </data>
  <data name="TransferSuccessful" xml:space="preserve">
    <value>{0} was transferred successfully from {1} to {2}.</value>
  </data>
  <data name="TransferWithdrawalFailed" xml:space="preserve">
    <value>Funds could not be transferred from the account provided.</value>
  </data>
  <data name="UsernameUnavailable" xml:space="preserve">
    <value>That username is taken. Please enter another username.</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>No account matches that username.</value>
  </data>
  <data name="ValidAmount" xml:space="preserve">
    <value>Please enter valid dollar amount.</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome to Console First Bank - banking the way it used to be.</value>
  </data>
  <data name="WhatAccountType" xml:space="preserve">
    <value>What type of account would you like to open?</value>
  </data>
  <data name="WhatSizeCD" xml:space="preserve">
    <value>What is the size of the certificate deposit term account requested?</value>
  </data>
  <data name="WhatSizeLoan" xml:space="preserve">
    <value>What is the size of the loan you would like to take out? All loans subject to approval.</value>
  </data>
  <data name="WithdrawalImmatureFunds" xml:space="preserve">
    <value>Immature funds cannot be withdrawn. Funds can be withdrawn if the account is closed prematurely.</value>
  </data>
  <data name="WithdrawalInsufficientFunds" xml:space="preserve">
    <value>Insufficient funds for requested withdrawal.</value>
  </data>
  <data name="WithdrawalSuccessBorrow" xml:space="preserve">
    <value>Withdrawal succeeded. Interest will be charged on the resulting negative balance.</value>
  </data>
  <data name="WithdrawalSuccessNoBorrow" xml:space="preserve">
    <value>Requested funds will be deducted from account balance.</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>yes</value>
  </data>
</root>